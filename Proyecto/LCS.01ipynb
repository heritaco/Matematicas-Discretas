{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "por ejemplo si hago eso, \n",
      "['por ejemplo si hago eso, ', 'es plagio', ' no']\n",
      "([('por ejemplo si hago eso, ', 60.97560975609756), ('es plagio', 56.25), (' no', 42.857142857142854)], 925.0)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "def find_longest_common_substring(str1, str2):\n",
    "    m = len(str1)\n",
    "    n = len(str2)\n",
    "\n",
    "    # Create a 2D table to store lengths of longest common suffixes\n",
    "    lcs_lengths = [[0] * (n + 1) for _ in range(m + 1)]\n",
    "    longest_length = 0  # Length of longest common substring\n",
    "    end_index = 0  # End of longest common substring in str1\n",
    "    # Compute the lengths of longest common suffixes\n",
    "    for i in range(1, m + 1):\n",
    "        for j in range(1, n + 1):\n",
    "            if str1[i - 1] == str2[j - 1]:\n",
    "                lcs_lengths[i][j] = lcs_lengths[i - 1][j - 1] + 1\n",
    "                if lcs_lengths[i][j] > longest_length:\n",
    "                    longest_length = lcs_lengths[i][j]\n",
    "                    end_index = i - 1\n",
    "            else:\n",
    "                lcs_lengths[i][j] = 0\n",
    "\n",
    "    # The longest common substring is from end_index - longest_length + 1 to end_index + 1\n",
    "    return str1[end_index - longest_length + 1: end_index + 1]\n",
    "\n",
    "# Test the function\n",
    "str1 = \"por ejemplo si hago eso, ya no, es plagio\"\n",
    "str2 = \"por ejemplo si hago eso, es plagio, no\"\n",
    "\n",
    "print(find_longest_common_substring(str1, str2))\n",
    "\n",
    "def find_n_longest_common_substrings(str1, str2, n):\n",
    "    longest_substrings = []\n",
    "    while len(longest_substrings) < n:\n",
    "        longest_substring = find_longest_common_substring(str1, str2)\n",
    "        if longest_substring == '':\n",
    "            break\n",
    "        longest_substrings.append(longest_substring)\n",
    "        str1 = str1.replace(longest_substring, '')\n",
    "        str2 = str2.replace(longest_substring, '')\n",
    "    return longest_substrings\n",
    "\n",
    "\n",
    "print(find_n_longest_common_substrings(str1, str2, 3))\n",
    "\n",
    "def find_n_longest_common_substrings_with_percentages(str1, str2, n):\n",
    "    longest_substrings = []\n",
    "    total_length = 0\n",
    "    while len(longest_substrings) < n:\n",
    "        longest_substring = find_longest_common_substring(str1, str2)\n",
    "        if longest_substring == '':\n",
    "            break\n",
    "        percentage = (len(longest_substring) / len(str1)) * 100\n",
    "        longest_substrings.append((longest_substring, percentage))\n",
    "        total_length += len(longest_substring)\n",
    "        str1 = str1.replace(longest_substring, '')\n",
    "        str2 = str2.replace(longest_substring, '')\n",
    "    total_percentage = (total_length / len(str1)) * 100\n",
    "    return longest_substrings, total_percentage\n",
    "\n",
    "str1 = \"por ejemplo si hago eso, ya no, es plagio\"\n",
    "str2 = \"por ejemplo si hago eso, es plagio, no\"\n",
    "print(find_n_longest_common_substrings_with_percentages(str1, str2, 3))\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
